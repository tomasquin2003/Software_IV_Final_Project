plugins {
    id 'java'
    id 'application'
    id 'com.zeroc.gradle.ice-builder.slice' version '1.4.7'
}

group = 'com.registraduria.votacion'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
}

// Configuración básica del compilador Slice - basada en ejemplos oficiales
slice {
    java {
        files = fileTree(dir: "src/main/resources/slice", includes: ["**/*.ice"])
    }
}

dependencies {
    // ICE 3.7.10
    implementation 'com.zeroc:ice:3.7.10'
    
    // Para manejo de CSV
    implementation 'org.apache.commons:commons-csv:1.8'
    
    // Logging
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    
    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}

test {
    useJUnitPlatform()
}

// Configurar aplicaciones ejecutables
application {
    mainClassName = 'com.registraduria.votacion.estacion.EstacionVotacionApp'
}

// Tarea para ejecutar la estación de votación
task runEstacion(type: JavaExec) {
    group = "application"
    description = "Ejecuta la Estación de Votación"
    main = 'com.registraduria.votacion.estacion.EstacionVotacionApp'
    classpath = sourceSets.main.runtimeClasspath
    args = ["--config", "src/main/resources/config/estacion.config"]
}

// Tarea para ejecutar el centro de votación
task runCentro(type: JavaExec) {
    group = "application"
    description = "Ejecuta el Centro de Votación"
    main = 'com.registraduria.votacion.centro.CentroVotacionApp'
    classpath = sourceSets.main.runtimeClasspath
    args = ["--config", "src/main/resources/config/centro.config"]
}