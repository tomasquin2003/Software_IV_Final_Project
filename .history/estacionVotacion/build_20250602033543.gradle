description = 'Módulo para gestionar las estaciones de votación'

dependencies {
    implementation project(':common')
    implementation 'org.postgresql:postgresql:42.3.1'
    
    // Dependencias explícitas para Ice
    implementation 'com.zeroc:ice:3.7.10'
}

apply plugin: 'application'

// Asegurar que se incluyen las clases generadas desde el módulo common
sourceSets {
    main {
        java {
            // Incluir el directorio de código generado del módulo common
            srcDirs += project(':common').file('src/generated/java')
        }
        resources {
            // Asegurar que los recursos se incluyen correctamente
            srcDirs += 'src/main/resources'
        }
    }
}

// Configuración de la aplicación - versión simplificada
application {
    // Usar la propiedad estándar que funciona en la mayoría de versiones de Gradle
    mainClassName = 'com.votacion.estacion.EstacionVotacion'
}

// Configuraciones adicionales de JVM para la aplicación
run {
    // Configurar opciones de JVM para la ejecución
    jvmArgs = ['-Xmx512m', '-Dfile.encoding=UTF-8']
    
    // Pasar propiedades del sistema a la aplicación
    systemProperty 'ice.config', "${projectDir}/src/main/resources/config.properties"
}

// Configuración para construir el JAR
jar {
    manifest {
        attributes(
            'Main-Class': 'com.votacion.estacion.EstacionVotacion',
            'Implementation-Title': 'Estacion de Votacion',
            'Implementation-Version': project.version,
            'Built-By': System.getProperty('user.name'),
            'Built-Date': new Date()
        )
    }
}

// Tarea para verificar que las clases generadas están en el classpath
tasks.register('verifyGeneratedClasses') {
    doLast {
        def generatedDir = project(':common').file('src/generated/java')
        println "Verificando directorio de clases generadas: ${generatedDir}"
        println "¿Existe el directorio? ${generatedDir.exists()}"
        if (generatedDir.exists()) {
            println "Archivos en el directorio: ${generatedDir.listFiles().size()}"
        }
    }
}

// Ejecutar la verificación antes de compilar
compileJava.dependsOn verifyGeneratedClasses